#!/usr/bin/env bash

#constants for text formating
declare -r begin="\033[" 
declare -r end="\033[0m"
declare -r sprite="\033[1;33m" #sprite txt color (yellow) + bright style

#screen update function:
draw(){
    clear #clear screen
    echo -en $begin"${y};${x}H"$sprite              # start txt formating and position cursor at [y,x] coords
    echo -e "\`-ðŸ˜ƒ-Â´"$end                           # output caracter 
    echo -en $begin"$((${y} + 1));${x}H"$sprite     # position cursor at [y+1,x] coords
    echo -e "  --  "$end                            # output character's feet (hehe)
}

#script start:

clear #clear screen 

#get the terminal window size (by lines and character collumns)
declare -i maxY=$(tput lines)
declare -i maxX=$(tput cols) 

#define the actual limits, based on the side of the character
((maxX -= 5)) #the character is 5 chars wide (and the count starts at the left)

#declare the starting coords y and x
declare -i x=0
declare -i y=1

draw #draw the silly man

declare -l input="" #init input variable

while (( 1 )) # infinite loop
do

read -s -N 1 input  # get input (1 character at a time)

#based on the wasd keys, change its coords and then draw!
if [[ $input =~ "a" ]]; then
    ((x>0)) && ((x--)) # if x coord is bigger than the x left limit, decrement x 
    draw

elif [[ $input =~ "d" ]]; then
    [[ $x -lt $maxX ]] && ((x++)) # if x coord is less than the x right limit, increment x 
    draw

elif [[ $input =~ "w" ]]; then
    ((y>1)) && ((y--))          # the character is 2 tall (cant be y<0)
    draw

elif [[ $input =~ "s" ]]; then
    [[ $y -lt $maxY ]] && ((y++))
    draw

fi

done